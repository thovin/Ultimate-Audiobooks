{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        //TODO also test single letter args

        {
            //Expected outcome: inputs from input folder (and not subfolders) are copied to default output folder
            "name": "basic test (single level, copy, input)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/Main/Main.py",
            "console": "integratedTerminal",
            "args": [
                "--input", "/media/timj/Storage/Code/Ultimate Audiobooks/ultimateTestEnvironment/input"  
            ]
        },

        {
            //Expected outcome: program runs without settings preview
            "name": "quick test",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/Main/Main.py",
            "console": "integratedTerminal",
            "args": [
                "--input", "/media/timj/Storage/Code/Ultimate Audiobooks/ultimateTestEnvironment/input",
                "--batch", "2",
                "--quick"
            ]
        },

        {
            //Expected outcome: No more than 1 book is processed
            "name": "batch test (1)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/Main/Main.py",
            "console": "integratedTerminal",
            "args": [
                "--input", "/media/timj/Storage/Code/Ultimate Audiobooks/ultimateTestEnvironment/input",
                "--batch", "1",
                "--quick"
            ]
        },

        {
            //Expected outcome: books are moved
            "name": "move test",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/Main/Main.py",
            "console": "integratedTerminal",
            "args": [
                "--input", "/media/timj/Storage/Code/Ultimate Audiobooks/ultimateTestEnvironment/input",
                "--batch", "2",
                "--move",
                "--quick"
            ]
        },

        {
            //Expected outcome: settings are saved (not provable until load test is run). up to 2 books are processed and moved as normal. move included because we need a setting to save.
            "name": "save test",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/Main/Main.py",
            "console": "integratedTerminal",
            "args": [
                "--input", "/media/timj/Storage/Code/Ultimate Audiobooks/ultimateTestEnvironment/input",
                "--batch", "2",
                "--move",
                "--save",
                "--quick"
            ]
        },

        {
            //Expected outcome: one (and only one) book is processed and moved
            "name": "load test (override batch to 1, keep move)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/Main/Main.py",
            "console": "integratedTerminal",
            "args": [
                "--input", "/media/timj/Storage/Code/Ultimate Audiobooks/ultimateTestEnvironment/input",
                "--load",
                "--batch", "1",
                "--quick"
            ]
        },

        {
            //Expected outcome: books are processed as per default TODO keep default?
            "name": "default test PLACEHOLDER(should copy & batch = 10)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/Main/Main.py",
            "console": "integratedTerminal",
            "args": [
                "--input", "/media/timj/Storage/Code/Ultimate Audiobooks/ultimateTestEnvironment/input",
                "--default",
                "--quick"
            ]
        },

        {
            //Expected outcome: books are output to "the chosen output"
            "name": "output test",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/Main/Main.py",
            "console": "integratedTerminal",
            "args": [
                "--input", "/media/timj/Storage/Code/Ultimate Audiobooks/ultimateTestEnvironment/input",
                "--output", "/media/timj/Storage/Code/Ultimate Audiobooks/ultimateTestEnvironment/the chosen output",
                "--batch", "2",
                "--quick"
            ]
        },

        {
            //Expected outcome: 
            "name": "rename test PLACEHOLDER",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/Main/Main.py",
            "console": "integratedTerminal",
            "args": [
                "--input", "/media/timj/Storage/Code/Ultimate Audiobooks/ultimateTestEnvironment/input",
                "--batch", "2",
                "--quick"
            ]
        },

        {
            //Expected outcome: 
            "name": "XXX test",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/Main/Main.py",
            "console": "integratedTerminal",
            "args": [
                "--input", "/media/timj/Storage/Code/Ultimate Audiobooks/ultimateTestEnvironment/input",
                "--batch", "2",
                "--quick"
            ]
        },

        {
            //Expected outcome: 
            "name": "XXX test",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/Main/Main.py",
            "console": "integratedTerminal",
            "args": [
                "--input", "/media/timj/Storage/Code/Ultimate Audiobooks/ultimateTestEnvironment/input",
                "--batch", "2",
                "--quick"
            ]
        },

        {
            //Expected outcome: 
            "name": "XXX test",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/Main/Main.py",
            "console": "integratedTerminal",
            "args": [
                "--input", "/media/timj/Storage/Code/Ultimate Audiobooks/ultimateTestEnvironment/input",
                "--batch", "2",
                "--quick"
            ]
        },

        {
            //Expected outcome: 
            "name": "XXX test",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/Main/Main.py",
            "console": "integratedTerminal",
            "args": [
                "--input", "/media/timj/Storage/Code/Ultimate Audiobooks/ultimateTestEnvironment/input",
                "--batch", "2",
                "--quick"
            ]
        },

        {
            //Expected outcome: program opens a web search for each book, with both data sources searched
            "name": "fetch test (both)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/Main/Main.py",
            "console": "integratedTerminal",
            "args": [
                "--input", "/media/timj/Storage/Code/Ultimate Audiobooks/ultimateTestEnvironment/input",
                "--batch", "2",
                "--fetch", "both",
                "--quick"
            ]
        },

        {
            //Expected outcome: OPD file is created
            "name": "create test",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/Main/Main.py",
            "console": "integratedTerminal",
            "args": [
                "--input", "/media/timj/Storage/Code/Ultimate Audiobooks/ultimateTestEnvironment/input",
                "--batch", "2",
                "--fetch", "both",
                "--create", "OPD",
                "--quick"
            ]
        },

        {
            //Expected outcome: file metadata is overwritten with that fetched
            "name": "clean test",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/Main/Main.py",
            "console": "integratedTerminal",
            "args": [
                "--input", "/media/timj/Storage/Code/Ultimate Audiobooks/ultimateTestEnvironment/input",
                "--batch", "2",
                "--fetch", "both",
                "--clean",
                "--quick"
            ]
        },

        {
            //Expected outcome: 
            "name": "force test PLACEHOLDER",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/Main/Main.py",
            "console": "integratedTerminal",
            "args": [
                "--input", "/media/timj/Storage/Code/Ultimate Audiobooks/ultimateTestEnvironment/input",
                "--batch", "2",
                "--fetch", "both",
                "--clean",
                "--force",
                "--quick"
            ]
        },

        {
            //Expected outcome: .mp4 and .m4a files are renamed to .m4b. all other filetypes are converted to .m4b.
            "name": "convert test",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/Main/Main.py",
            "console": "integratedTerminal",
            "args": [
                "--input", "/media/timj/Storage/Code/Ultimate Audiobooks/ultimateTestEnvironment/input",
                "--batch", "2",
                "--convert",
                "--quick"
            ]
        },

        {
            //Expected outcome: up to 10 books in and only in the root folder have their metadata fetched and cleaned. books are then converted to .m4b as needed and moved to "the chosen output".
            //Additionally, an OPD metadata file is created
            "name": "single level practical",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/Main/Main.py",
            "console": "integratedTerminal",
            "args": [
                "--input", "/media/timj/Storage/Code/Ultimate Audiobooks/ultimateTestEnvironment/input",
                "--output", "/media/timj/Storage/Code/Ultimate Audiobooks/ultimateTestEnvironment/the chosen output",
                "--fetch", "both",
                "--move",
                "--clean",
                "--convert",
                "--create", "OPD",
                "--quick"
            ]
        },

        {
            //Expected outcome: 
            "name": "recursive fetch practical",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/Main/Main.py",
            "console": "integratedTerminal",
            "args": [
                "--input", "/media/timj/Storage/Code/Ultimate Audiobooks/ultimateTestEnvironment/input",
                "--output", "/media/timj/Storage/Code/Ultimate Audiobooks/ultimateTestEnvironment/the chosen output",
                "--fetch", "both",
                "--move",
                "--clean",
                "--convert",
                "--create", "OPD",
                "recurseFetch",
                "--quick"
            ]
        },

        {
            //Expected outcome: 
            "name": "XXX test",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/Main/Main.py",
            "console": "integratedTerminal",
            "args": [
                "--input", "/media/timj/Storage/Code/Ultimate Audiobooks/ultimateTestEnvironment/input",
                "--batch", "2",
                "--quick"
            ]
        },

        {
            //Expected outcome: 
            "name": "XXX test",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/Main/Main.py",
            "console": "integratedTerminal",
            "args": [
                "--input", "/media/timj/Storage/Code/Ultimate Audiobooks/ultimateTestEnvironment/input",
                "--batch", "2",
                "--quick"
            ]
        },

        {
            //Expected outcome: 
            "name": "XXX test",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/Main/Main.py",
            "console": "integratedTerminal",
            "args": [
                "--input", "/media/timj/Storage/Code/Ultimate Audiobooks/ultimateTestEnvironment/input",
                "--batch", "2",
                "--quick"
            ]
        },

        {
            //Expected outcome: 
            "name": "XXX test",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/Main/Main.py",
            "console": "integratedTerminal",
            "args": [
                "--input", "/media/timj/Storage/Code/Ultimate Audiobooks/ultimateTestEnvironment/input",
                "--batch", "2",
                "--quick"
            ]
        },

        {
            "name": "SANDBOX",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/Main/Main.py",
            "console": "integratedTerminal",
            "args": [
                "--input", "/media/timj/Storage/Code/Ultimate Audiobooks/ultimateTestEnvironment/input",
                // "--batch", "2",
                "--quick"
            ]
        }


    ]
}